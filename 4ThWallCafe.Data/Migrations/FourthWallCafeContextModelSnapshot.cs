// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _4ThWallCafe.MVC.Core.Entities;

#nullable disable

namespace _4ThWallCafe.Data.Migrations
{
    [DbContext(typeof(FourthWallCafeContext))]
    partial class FourthWallCafeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.CafeOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentTypeID");

                    b.Property<int?>("ServerId")
                        .HasColumnType("int")
                        .HasColumnName("ServerID");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal?>("Tip")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("OrderId")
                        .HasName("PK__CafeOrde__C3905BAFE0A6FEBD");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("ServerId");

                    b.ToTable("CafeOrder", (string)null);
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CartItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.Property<int>("ItemPriceID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<Guid>("UserSessionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserSessionID");

                    b.HasKey("CartItemId")
                        .HasName("PK__CartItem__488B0B2AA8C743D8");

                    b.HasIndex("ItemId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__19093A2B58977E74");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ItemId")
                        .HasName("PK__Item__727E83EB2ECBE843");

                    b.HasIndex("CategoryId");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.ItemPrice", b =>
                {
                    b.Property<int>("ItemPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ItemPriceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPriceId"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TimeOfDayId")
                        .HasColumnType("int")
                        .HasColumnName("TimeOfDayID");

                    b.HasKey("ItemPriceId")
                        .HasName("PK__ItemPric__7E70A20251CE98EB");

                    b.HasIndex("ItemId");

                    b.HasIndex("TimeOfDayId");

                    b.ToTable("ItemPrice", (string)null);
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<decimal>("ExtendedPrice")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<int>("ItemPriceId")
                        .HasColumnType("int")
                        .HasColumnName("ItemPriceID");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<byte>("Quantity")
                        .HasColumnType("tinyint");

                    b.HasKey("OrderItemId")
                        .HasName("PK__OrderIte__57ED06A1750A3466");

                    b.HasIndex("ItemPriceId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTypeId"));

                    b.Property<string>("PaymentTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PaymentTypeId")
                        .HasName("PK__PaymentT__BA430B15F4C199F8");

                    b.ToTable("PaymentType", (string)null);
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.Server", b =>
                {
                    b.Property<int>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServerId"));

                    b.Property<DateOnly>("DoB")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateOnly?>("TermDate")
                        .HasColumnType("date");

                    b.HasKey("ServerId")
                        .HasName("PK__Server__C56AC886D65D2B11");

                    b.ToTable("Server", (string)null);
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.TimeOfDay", b =>
                {
                    b.Property<int>("TimeOfDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TimeOfDayID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeOfDayId"));

                    b.Property<string>("TimeOfDayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TimeOfDayId")
                        .HasName("PK__TimeOfDa__866813FF8533DBEB");

                    b.ToTable("TimeOfDay", (string)null);
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.CafeOrder", b =>
                {
                    b.HasOne("_4ThWallCafe.MVC.Core.Entities.PaymentType", "PaymentType")
                        .WithMany("CafeOrders")
                        .HasForeignKey("PaymentTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__CafeOrder__Payme__33D4B598");

                    b.HasOne("_4ThWallCafe.MVC.Core.Entities.Server", "Server")
                        .WithMany("CafeOrders")
                        .HasForeignKey("ServerId")
                        .HasConstraintName("FK__CafeOrder__Serve__32E0915F");

                    b.Navigation("PaymentType");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.CartItem", b =>
                {
                    b.HasOne("_4ThWallCafe.MVC.Core.Entities.Item", "Item")
                        .WithMany("CartItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CartItem_Item");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.Item", b =>
                {
                    b.HasOne("_4ThWallCafe.MVC.Core.Entities.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Item__CategoryID__267ABA7A");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.ItemPrice", b =>
                {
                    b.HasOne("_4ThWallCafe.MVC.Core.Entities.Item", "Item")
                        .WithMany("ItemPrices")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__ItemPrice__ItemI__2B3F6F97");

                    b.HasOne("_4ThWallCafe.MVC.Core.Entities.TimeOfDay", "TimeOfDay")
                        .WithMany("ItemPrices")
                        .HasForeignKey("TimeOfDayId")
                        .IsRequired()
                        .HasConstraintName("FK__ItemPrice__TimeO__2C3393D0");

                    b.Navigation("Item");

                    b.Navigation("TimeOfDay");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.OrderItem", b =>
                {
                    b.HasOne("_4ThWallCafe.MVC.Core.Entities.ItemPrice", "ItemPrice")
                        .WithMany("OrderItems")
                        .HasForeignKey("ItemPriceId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderItem__ItemP__37A5467C");

                    b.HasOne("_4ThWallCafe.MVC.Core.Entities.CafeOrder", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderItem__Order__36B12243");

                    b.Navigation("ItemPrice");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.CafeOrder", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.Item", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("ItemPrices");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.ItemPrice", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.PaymentType", b =>
                {
                    b.Navigation("CafeOrders");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.Server", b =>
                {
                    b.Navigation("CafeOrders");
                });

            modelBuilder.Entity("_4ThWallCafe.MVC.Core.Entities.TimeOfDay", b =>
                {
                    b.Navigation("ItemPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
